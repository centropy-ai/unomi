<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
    <cm:property-placeholder persistent-id="org.apache.unomi.operation" update-strategy="reload" placeholder-prefix="${operation.">
        <cm:default-properties>
            <cm:property name="kafka.brokers" value=""/>
            <cm:property name="kafka.consumerTopics" value=""/>
            <cm:property name="kafka.producerTopics" value=""/>
            <cm:property name="kafka.groupId" value=""/>
            <cm:property name="kafka.consumersCount" value="2"/>
            <cm:property name="kafka.autoCommitEnable" value="true"/>
            <cm:property name="kafka.workerPoolMaxSize" value="1024"/>
            <cm:property name="kafka.workerPoolCoreSize" value="2"/>
            <cm:property name="kafka.camel.component.kafka.worker-pool-max-size" value="2"/>
        </cm:default-properties>
    </cm:property-placeholder>
    <cm:property-placeholder persistent-id="org.apache.unomi.cluster"
                             update-strategy="reload" placeholder-prefix="${cluster.">
        <cm:default-properties>
            <cm:property name="contextserver.nodeType" value="MASTER"/>
        </cm:default-properties>
    </cm:property-placeholder>
    <bean id="jacksonDataFormat" class="org.apache.camel.component.jackson.JacksonDataFormat">
        <property name="unmarshalType" value="org.apache.unomi.api.Event"/>
    </bean>
    <!-- cfg configuration -->
    <!-- Action executor -->
    <bean class="org.apache.unomi.operation.processor.KafkaEventInjectorListener" id="eventListener">
        <property name="eventService" ref="eventService"/>
        <property name="profileService" ref="profileService"/>
    </bean>

    <bean class="org.apache.unomi.operation.actions.BufferEventProcessingAction" id="validator">
        <property name="context" ref="kafkaContext"/>
    </bean>
    <service id="kafkaContextBuilder" ref="kafkaContext">
        <interfaces>
            <value>org.osgi.framework.SynchronousBundleListener</value>
        </interfaces>
    </service>
    <bean id="kafkaContext" class="org.apache.unomi.operation.EventKafkaContext"
          init-method="initCamelContext" destroy-method="preDestroy">
        <property name="kafkaProps">
            <map>
                <entry key="brokers" value="${operation.kafka.brokers}"/>
                <entry key="producerTopics" value="${operation.kafka.producerTopics}"/>
                <entry key="consumerTopics" value="${operation.kafka.consumerTopics}"/>
                <entry key="groupId" value="${operation.kafka.groupId}"/>
                <entry key="consumersCount" value="${operation.kafka.consumersCount}"/>
                <entry key="autoCommitEnable" value="${operation.kafka.autoCommitEnable}"/>
                <entry key="workerPoolMaxSize" value="${operation.kafka.workerPoolMaxSize}"/>
                <entry key="workerPoolCoreSize" value="${operation.kafka.workerPoolCoreSize}"/>
                <entry key="workerPoolMaxSize" value="${operation.kafka.camel.component.kafka.worker-pool-max-size}"/>
            </map>
        </property>
        <property name="nodeType" value="${cluster.contextserver.nodeType}"/>
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="objectMapper" ref="jacksonDataFormat"/>
        <property name="eventFromKafkaListener" ref="eventListener"/>
    </bean>

    <reference id="eventService" interface="org.apache.unomi.api.services.EventService"/>
    <reference id="profileService" interface="org.apache.unomi.api.services.ProfileService"/>
    <service id="bufferEventProcessing" interface="org.apache.unomi.api.actions.ActionExecutor" ref="validator">
        <service-properties>
            <entry key="actionExecutorId" value="bufferEventProcessing"/>
        </service-properties>
    </service>
</blueprint>
